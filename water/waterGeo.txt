#version 330 core
layout (triangles) in;
layout (triangle_strip, max_vertices = 3) out;
in GEO_IN {
	vec3 WorldP;
} geo_in[];
out GEO_OUT {
  vec3 wNormal;
  vec3 WorldP;
} geo_out;


vec3 GetNormal() {
   vec3 a = vec3(gl_in[0].gl_Position) - vec3(gl_in[1].gl_Position);
   vec3 b = vec3(gl_in[2].gl_Position) - vec3(gl_in[1].gl_Position);
   vec3 result =  normalize(cross(a, b));
   if(result.y < 0) result = vec3(0,0,0) - result;
   return result;
}  

void main()
{
	geo_out.wNormal = GetNormal();

	//geo_out.WorldP = geo_in[0].WorldP;
	gl_Position = gl_in[0].gl_Position;
    EmitVertex();
	//geo_out.WorldP = geo_in[1].WorldP;
	gl_Position = gl_in[1].gl_Position;
    EmitVertex();
	//geo_out.WorldP = geo_in[2].WorldP;
	gl_Position = gl_in[2].gl_Position;
    EmitVertex();
    EndPrimitive();
}