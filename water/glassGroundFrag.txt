#version 330 core
out vec4 FragColor;
in vec3 WorldPos;
in vec2 textcoor;
uniform sampler2D texture0;
uniform vec3 lightPosition;
uniform vec3 lightColor;
uniform vec3 camPos;

void main()
{		
	vec3 Normal = vec3(0,1,0);
    vec3 ViewVec = normalize(camPos - WorldPos);
    vec3 LightVec = normalize(lightPosition);
    vec3 halfVec = normalize(ViewVec + LightVec);

	vec4 color = texture(texture0, textcoor);
	vec3 onlyColor = vec3(color);
	float spec = pow(max(dot(reflect(-ViewVec,Normal),LightVec), 0.0), 5);
	vec3 specular = 0.5 * spec * lightColor;
	onlyColor = onlyColor * specular;

	FragColor = vec4(onlyColor, color.w);
}